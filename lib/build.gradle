/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    // Publish new library release to the maven repositories
    id 'maven-publish'
}

group = 'io.github.jmdaemon'
version = '0.1.0'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.8.1')
        }
    }
} 

// Publish new releases
publishing {
    publications {
        myLibrary(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = rootProject.name
            url = layout.buildDirectory.dir("dist")
        }
    }
}

// Add the project name and version to the manifest file
jar {
    manifest {
        attributes('Implementation-Title': rootProject.name,
                   'Implementation-Version': project.version)
    }
}

java {
    withSourcesJar() // Create a sources jar
    withJavadocJar() // Create a jar with the javadocs
} 
